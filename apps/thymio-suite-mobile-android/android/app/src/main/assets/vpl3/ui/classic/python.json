{
	"blocks": [
		{
			"name": "!stop",
			"python": {
				"statement": [
					"thymio.motor.left.target = 0\n",
					"thymio.motor.right.target = 0\n",
					"thymio.leds.circle = [32,32,32,32,32,32,32,32]\n",
					"@onevent(thymio.TIMER0)\n",
					"def onevent_timer0():\n",
					"thymio.leds.circle = [0,0,0,0,0,0,0,0]\n",
					"<\n"
				]
			}
		},
		{
			"name": "button",
			"python": {
				"sectionBegin": [
					"@thymio.onevent(thymio.BUTTONS)\n",
					"def onevent_buttons():\n"
				],
				"sectionEnd": "<\n",
				"clause": "`['center', 'forward', 'backward', 'right', 'left'].map(function (s, i) { return $[i] ? 'thymio.button.' + s : ''; }).filter(function (s) { return s; }).join(' and ') || ['center', 'forward', 'backward', 'right', 'left'].map(function (s) { return 'button.' + s; }).join(' or ')`"
			}
		},
		{
			"name": "button 1",
			"python": {
				"sectionBegin": [
					"@thymio.onevent(thymio.BUTTONS)\n",
					"def onevent_buttons():\n"
				],
				"sectionEnd": "<\n",
				"clause": "thymio.button.`['center', 'forward', 'backward', 'right', 'left'][$[0]]`"
			}
		},
		{
			"name": "horiz prox",
			"python": {
				"sectionBegin": [
					"@thymio.onevent(thymio.PROX)\n",
					"def onevent_prox():\n"
				],
				"sectionEnd": "<\n",
				"clause": "`[2, 1, 3, 0, 4, 5, 6].map(function (ix, i) { return $[i] ? 'thymio.prox.horizontal[' + ix + '] ' + ($[i] > 0 ? '>= 2000' : '<= 1000') : ''; }).filter(function (s) { return s; }).join(' or ')`"
			}
		},
		{
			"name": "horiz prox adv",
			"python": {
				"sectionBegin": [
					"@thymio.onevent(thymio.PROX)\n",
					"def onevent_prox():\n"
				],
				"sectionEnd": "<\n",
				"clause": "`[2, 1, 3, 0, 4, 5, 6].map(function (ix, i) { return $[i] ? 'thymio.prox.horizontal[' + ix + '] ' + ($[i] > 0 ? '>= ' + Math.round(7 + 33 * $[7]) : '<= ' + Math.round(7 + 33 * $[8])) + '00' : ''; }).filter(function (s) { return s; }).join(' and ') || [2, 1, 3, 0, 4, 5, 6].map(function (ix) { return 'thymio.prox.horizontal[' + ix + '] >= 2000'; }).join(' or ')`"
			}
		},
		{
			"name": "horiz prox 1",
			"python": {
				"sectionBegin": [
					"@thymio.onevent(thymio.PROX)\n",
					"def onevent_prox():\n"
				],
				"sectionEnd": "<\n",
				"clause": "`[2, 1, 3, 0, 4, 5, 6].map(function (ix, i) { return $[i] ? 'thymio.prox.horizontal[' + ix + '] ' + ($[i] > 0 ? '>= ' : '<= ') + Math.round(7 + 33 * $[7]) + '00' : ''; }).filter(function (s) { return s; }).join(' and ') || [2, 1, 3, 0, 4, 5, 6].map(function (ix) { return 'thymio.prox.horizontal[' + ix + '] >= 2000'; }).join(' or ')`"
			}
		},
		{
			"name": "ground",
			"python": {
				"sectionBegin": [
					"@thymio.onevent(thymio.PROX)\n",
					"def onevent_prox():\n"
				],
				"sectionEnd": "<\n",
				"clause": "`[0, 1].map(function (ix, i) { return $[i] ? 'thymio.prox.ground.delta[' + ix + '] ' + ($[i] > 0 ? '>= 450' : '<= 400') : ''; }).filter(function (s) { return s; }).join(' and ') || [0, 1].map(function (ix) { return 'prox.ground.delta[' + ix + '] >= 450'; }).join(' or ')`"
			}
		},
		{
			"name": "ground adv",
			"python": {
				"sectionBegin": [
					"@thymio.onevent(thymio.PROX)\n",
					"def onevent_prox():\n"
				],
				"sectionEnd": "<\n",
				"clause": "`[0, 1].map(function (ix, i) { return $[i] ? 'thymio.prox.ground.delta[' + ix + '] ' + ($[i] > 0 ? '>= ' + Math.round(25 + 40 * $[2]) : '<= ' + Math.round(25 + 40 * $[3])) : ''; }).filter(function (s) { return s; }).join(' and ') || [0, 1].map(function (ix) { return 'thymio.prox.ground.delta[' + ix + '] >= 450'; }).join(' or ')`"
			}
		},
		{
			"name": "ground 1",
			"python": {
				"sectionBegin": [
					"@thymio.onevent(thymio.PROX)\n",
					"def onevent_prox():\n"
				],
				"sectionEnd": "<\n",
				"clause": "`[0, 1].map(function (ix, i) { return $[i] ? 'thymio.prox.ground.delta[' + ix + '] ' + ($[i] > 0 ? '>= ' : '<= ') + Math.round(25 + 40 * $[2]) : ''; }).filter(function (s) { return s; }).join(' and ') || [0, 1].map(function (ix) { return 'thymio.prox.ground.delta[' + ix + '] >= 450'; }).join(' or ')`"
			}
		},
		{
			"name": "tap",
			"python": {
				"initCodeExec": [
					"tapped = False\n"
				],
				"sectionBegin": [
					"@thymio.onevent(thymio.TAP)\n",
					"def onevent_tap():\n"
				],
				"sectionPreamble": "tapped = True\n",
				"sectionEnd": "<\n",
				"clauseAsCondition": "tapped"
			}
		},
		{
			"name": "accelerometer",
			"python": {
				"initCodeExec": [
					"`$[0] == 0 ? 'tapped = False\\n' : ''`"
				],
				"sectionBegin": [
					"@thymio.onevent(thymio.`$[0] == 0 ? 'TAP' : 'ACC'`)\n",
					"def onevent_`$[0] == 0 ? 'tap' : 'acc'`():\n"
				],
				"sectionEnd": "<\n",
				"sectionPreamble": "`$[0] == 0 ? 'tapped = True\\n' : ''`",
				"clauseInit": "`$[0] === 1 ? 'rollAngle = thymio.math.atan2(thymio.acc[0], thymio.acc[2])\\n' : $[0] === 2 ? 'pitchAngle = thymio.math.atan2(acc[1], acc[2])\\n' : ''`",
				"clause": "`$[0] == 0 ? 'tapped' : (function (name, a) { return a <= -6 ? name + ' < ' + Math.round(2730.67 * a + 1365.33) : a >= 6 ? name + ' >= ' + Math.round(2730.67 * a - 1365.33) : name + ' >= ' + Math.round(2730.67 * a - 1365.33) + ' and ' + name + ' < ' + Math.round(2730.67 * a + 1365.33); })($[0] === 1 ? 'rollAngle' : 'pitchAngle', $[0] === 2 ? $[1] : -$[1])`"
			}
		},
		{
			"name": "roll",
			"python": {
				"sectionBegin": [
					"@thymio.onevent(thymio.ACC)\n",
					"def onevent_acc():\n"
				],
				"sectionEnd": "<\n",
				"clauseInit":
					"rollAngle = thymio.math.atan2(thymio.acc[0], thymio.acc[2])\n",
				"clause":
					"`Math.abs($[0]) === 12 ? 'rollAngle >= ' + Math.round(2730.67 * 12 - 1365.33) + ' or rollAngle < ' + Math.round(2730.67 * $[0] + 1365.33) : 'rollAngle >= ' + Math.round(2730.67 * $[0] - 1365.33) + ' and rollAngle < ' + Math.round(2730.67 * $[0] + 1365.33)`"
			}
		},
		{
			"name": "pitch",
			"python": {
				"sectionBegin": [
					"@thymio.onevent(thymio.ACC)\n",
					"def onevent_acc():\n"
				],
				"sectionEnd": "<\n",
				"clauseInit":
					"pitchAngle = thymio.math.atan2(thymio.acc[1], thymio.acc[2])\n",
				"clause":
					"`Math.abs($[0]) === 12 ? 'pitchAngle >= ' + Math.round(2730.67 * 12 - 1365.33) + ' or pitchAngle < ' + Math.round(2730.67 * $[0] + 1365.33) : 'pitchAngle >= ' + Math.round(2730.67 * $[0] - 1365.33) + ' and pitchAngle < ' + Math.round(2730.67 * $[0] + 1365.33)`"
			}
		},
		{
			"name": "yaw",
			"python": {
				"sectionBegin": [
					"@thymio.onevent(thymio.ACC)\n",
					"def onevent_acc():\n"
				],
				"sectionEnd": "<\n",
				"clauseInit":
					"yawAngle = thymio.math.atan2(thymio.acc[0], thymio.acc[1])\n",
				"clause":
					"`Math.abs($[0]) === 12 ? 'yawAngle >= ' + Math.round(2730.67 * 12 - 1365.33) + ' or yawAngle < ' + Math.round(2730.67 * $[0] + 1365.33) : 'yawAngle >= ' + Math.round(2730.67 * $[0] - 1365.33) + ' and yawAngle < ' + Math.round(2730.67 * $[0] + 1365.33)`"
			}
		},
		{
			"name": "clap",
			"python": {
				"sectionBegin": [
					"@thymio.onevent(thymio.MIC)\n",
					"def onevent_mic():\n"
				],
				"sectionEnd": "<\n"
			}
		},
		{
			"name": "init",
			"python": {
					"sectionBegin": "# inititialization\n"
			}
		},
		{
			"name": "timer",
			"python": {
				"initCodeExec": [
					[
						"# stop timer 0\n",
						"thymio.timer.period[0] = 0\n"
					],
					"timerElapsed = False\n"
				],
				"sectionBegin": [
					"@thymio.onevent(thymio.TIMER0)\n",
					"def onevent_timer0():\n"
				],
				"sectionEnd": "<\n",
				"sectionPreamble": "timerElapsed = True\nthymio.timer.period[0] = 0\n",
				"clauseAsCondition": "timerElapsed"
			}
		},
		{
			"name": "remote control arrows"
		},
		{
			"name": "state",
			"python": {
					"initCodeExec": [
						"state = [False, False, False, False]\n"
					],
					"clause": "`$.map(function (v, i) { return (v >= 0 ? '' : 'not ') + 'state0[' + i + ']'; }).filter(function (v, i) { return $[i]; }).join(' and ')`"
			}
		},
		{
			"name": "state 8",
			"python": {
				"initCodeExec": [
					"state8 = 0\n"
				],
				"clause": "state8 == `$[0]`"
			}
		},
		{
			"name": "counter comparison",
			"python": {
					"initCodeExec": [
						"counter = 0\n"
					],
					"clause": "counter `$[0] === 0 ? '==' : $[0] > 0 ? '>=' : '<='` `$[1]`"
			}
		},
		{
			"name": "color state",
			"python": {
				"initCodeExec": [
					"topColor = [0, 0, 0]\n"
				],
				"clause": "`$.map(function (p, i) { return 'topColor[' + i + '] / 11 == ' + Math.floor(p * 2.99); }).join(' and ')`"
			}
		},
		{
			"name": "color 8 state",
			"python": {
				"initCodeExec": [
					"topColor = [0, 0, 0]\n"
				],
				"clause": "`$.map(function (p, i) { return 'topColor[' + i + '] / 11 == ' + Math.floor(p * 2.99); }).join(' and ')`"
			}
		},
		{
			"name": "motor state",
			"python": {
				"clause": [
					"`$[0] == 0 ? 'abs(' : ''`thymio.motor.left.target`$[0] > 0 ? ' > ' : $[0] < 0 ? ' < -' : ') < '``0.1 * slowdown` ",
					"and `$[1] == 0 ? 'abs(' : ''`thymio.motor.right.target`$[1] > 0 ? ' > ' : $[1] < 0 ? ' < -' : ') < '``0.1 * slowdown`"
				]
			}
		},
		{
			"name": "motor",
			"python": {
				"initCodeExec": [
					[
						"# reset outputs\n",
						"thymio.leds.top = [0, 0, 0]\n",
						"thymio.leds.bottom.left = [0, 0, 0]\n",
						"thymio.leds.bottom.right = [0, 0, 0]\n",
						"thymio.leds.circle = [0, 0, 0, 0, 0, 0, 0, 0]\n"
					]
				],
				"statement": [
					"thymio.motor.left.target = `toFixed($[0] * slowdown)`\n",
					"thymio.motor.right.target = `toFixed($[1] * slowdown)`\n"
				]
			}
		},
		{
			"name": "move",
			"python": {
				"initCodeExec": [
					[
						"# reset outputs\n",
						"thymio.leds.top = [0, 0, 0]\n",
						"thymio.leds.bottom.left = [0, 0, 0]\n",
						"thymio.leds.bottom.right = [0, 0, 0]\n",
						"thymio.leds.circle = [0, 0, 0, 0, 0, 0, 0, 0]\n"
					]
				],
				"statement": [
					"thymio.motor.left.target = `toFixed([0, 0.2, -0.2, 0.2-0.05, 0.2+0.05, -0.2, 0.2][$[0]] * slowdown)`\n",
					"thymio.motor.right.target = `toFixed([0, 0.2, -0.2, 0.2+0.05, 0.2-0.05, 0.2, -0.2][$[0]] * slowdown)`\n"
				]
			}
		},
		{
			"name": "nn obstacles",
			"python": {
				"initCodeExec": [
					[
						"# reset outputs\n",
						"thymio.leds.top = [0, 0, 0]\n",
						"thymio.leds.bottom.left = [0, 0, 0]\n",
						"thymio.leds.bottom.right = [0, 0, 0]\n",
						"thymio.leds.circle = [0, 0, 0, 0, 0, 0, 0, 0]\n"
					]
				],
				"statement": [
					"thymio.motor.left.target = `Math.round(500 * $[0] * slowdown)`",
					"`Math.round(20 * $[1]) ? ' - thymio.prox.horizontal[2] / 10 * ' + Math.round(20 * $[1]).toString(10) + ' / 16' : ''`",
					"`Math.round(20 * $[2]) ? ' + thymio.prox.horizontal[0] / 10 * ' + Math.round(20 * $[2]).toString(10) + ' / 16' : ''`",
					"`Math.round(20 * $[3]) ? ' - thymio.thymio.thymio.thymio.prox.horizontal[4] / 10 * ' + Math.round(20 * $[3]).toString(10) + ' / 16' : ''`\n",
					"thymio.motor.right.target = `Math.round(500 * $[0] * slowdown)`",
					"`Math.round(20 * $[1]) ? ' - thymio.thymio.thymio.prox.horizontal[2] / 10 * ' + Math.round(20 * $[1]).toString(10) + ' / 16' : ''`",
					"`Math.round(20 * $[2]) ? ' + thymio.thymio.prox.horizontal[4] / 10 * ' + Math.round(20 * $[2]).toString(10) + ' / 16' : ''`",
					"`Math.round(20 * $[3]) ? ' - thymio.prox.horizontal[0] / 10 * ' + Math.round(20 * $[3]).toString(10) + ' / 16' : ''`\n"
				]
			}
		},
		{
			"name": "top color",
			"python": {
				"initCodeExec": [
					"topColor = [0, 0, 0]\n",
					[
						"# reset outputs\n",
						"thymio.leds.top = [0, 0, 0]\n",
						"thymio.leds.bottom.left = [0, 0, 0]\n",
						"thymio.leds.bottom.right = [0, 0, 0]\n",
						"thymio.leds.circle = [0, 0, 0, 0, 0, 0, 0, 0]\n"
					]
				],
				"statement": [
					"topColor = [`$.map(function (x) { return Math.round(32 * x); }).join(', ')`]\n",
					"thymio.leds.top = topColor\n"
				]
			}
		},
		{
			"name": "top color 8",
			"python": {
				"initCodeExec": [
					"topColor = [0, 0, 0]\n",
					[
						"# reset outputs\n",
						"thymio.leds.top = [0, 0, 0]\n",
						"thymio.leds.bottom.left = [0, 0, 0]\n",
						"thymio.leds.bottom.right = [0, 0, 0]\n",
						"thymio.leds.circle = [0, 0, 0, 0, 0, 0, 0, 0]\n"
					]
				],
				"statement": [
					"topColor = [`['0,0,0','32,0,0','0,32,0','32,32,0','0,0,32','32,0,32','0,32,32','32,32,32'][$[0]]`]\n",
					"thymio.leds.top = topColor\n"
				]
			}
		},
		{
			"name": "bottom color",
			"python": {
				"initCodeExec": [
					[
						"# reset outputs\n",
						"thymio.leds.top = [0, 0, 0]\n",
						"thymio.leds.bottom.left = [0, 0, 0]\n",
						"thymio.leds.bottom.right = [0, 0, 0]\n",
						"thymio.leds.circle = [0, 0, 0, 0, 0, 0, 0, 0]\n"
					]
				],
				"statement": [
					"thymio.leds.bottom.left = [`$.map(function (x) { return Math.round(32 * x); }).join(', ')`]\n",
					"thymio.leds.bottom.right = [`$.map(function (x) { return Math.round(32 * x); }).join(', ')`]\n"
				]
			}
		},
		{
			"name": "bottom-left color",
			"python": {
				"initCodeExec": [
					[
						"# reset outputs\n",
						"thymio.leds.top = [0, 0, 0]\n",
						"thymio.leds.bottom.left = [0, 0, 0]\n",
						"thymio.leds.bottom.right = [0, 0, 0]\n",
						"thymio.leds.circle = [0, 0, 0, 0, 0, 0, 0, 0]\n"
					]
				],
				"statement":
					"thymio.leds.bottom.left = [`$.map(function (x) { return Math.round(32 * x); }).join(', ')`]\n"
			}
		},
		{
			"name": "bottom-right color",
			"python": {
				"initCodeExec": [
					[
						"# reset outputs\n",
						"thymio.leds.top = [0, 0, 0]\n",
						"thymio.leds.bottom.left = [0, 0, 0]\n",
						"thymio.leds.bottom.right = [0, 0, 0]\n",
						"thymio.leds.circle = [0, 0, 0, 0, 0, 0, 0, 0]\n"
					]
				],
				"statement":
					"thymio.leds.bottom.right = [`$.map(function (x) { return Math.round(32 * x); }).join(', ')`]\n"
			}
		},
		{
			"name": "bottom color 8",
			"python": {
				"initCodeExec": [
					[
						"# reset outputs\n",
						"thymio.leds.top = [0, 0, 0]\n",
						"thymio.leds.bottom.left = [0, 0, 0]\n",
						"thymio.leds.bottom.right = [0, 0, 0]\n",
						"thymio.leds.circle = [0, 0, 0, 0, 0, 0, 0, 0]\n"
					]
				],
				"statement": [
					"thymio.leds.bottom.left = [`['0,0,0','32,0,0','0,32,0','32,32,0','0,0,32','32,0,32','0,32,32','32,32,32'][$[0]]`]\n",
					"thymio.leds.bottom.right = [`['0,0,0','32,0,0','0,32,0','32,32,0','0,0,32','32,0,32','0,32,32','32,32,32'][$[0]]`]\n"
				]
			}
		},
		{
			"name": "bottom-left color 8",
			"python": {
				"initCodeExec": [
					[
						"# reset outputs\n",
						"thymio.leds.top = [0, 0, 0]\n",
						"thymio.leds.bottom.left = [0, 0, 0]\n",
						"thymio.leds.bottom.right = [0, 0, 0]\n",
						"thymio.leds.circle = [0, 0, 0, 0, 0, 0, 0, 0]\n"
					]
				],
				"statement":
					"thymio.leds.bottom.left = [`['0,0,0','32,0,0','0,32,0','32,32,0','0,0,32','32,0,32','0,32,32','32,32,32'][$[0]]`]\n"
			}
		},
		{
			"name": "bottom-right color 8",
			"python": {
				"initCodeExec": [
					[
						"# reset outputs\n",
						"thymio.leds.top = [0, 0, 0]\n",
						"thymio.leds.bottom.left = [0, 0, 0]\n",
						"thymio.leds.bottom.right = [0, 0, 0]\n",
						"thymio.leds.circle = [0, 0, 0, 0, 0, 0, 0, 0]\n"
					]
				],
				"statement":
					"thymio.leds.bottom.right = [`['0,0,0','32,0,0','0,32,0','32,32,0','0,0,32','32,0,32','0,32,32','32,32,32'][$[0]]`]\n"
			}
		},
		{
			"name": "notes",
			"python": {
				"initCodeExec": [
					[
						"# init. variables for notes\n",
						"note_index = 6\n",
						"note_count = 6\n"
					],
					[
						"# compute a sinus wave for sound\n",
						"for i in range(142):\n",
						"wave_phase = (i - 70) * 468\n",
						"wave_intensity = thymio.math.cos(wave_phase)\n",
						"wave[i] = wave_intensity / 256\n",
						"<\n",
						"thymio.nf.sound.wave(wave)\n"
					],
					[
						"thymio.nf.sound.system(-1)\n"
					]
				],
				"initCodeDecl": [
					[
						"# when a note is finished, play the next one\n",
						"@thymio.onevent(thymio.SOUND_FINISHED)\n",
						"def onevent_sound_finished():\n",
						"if note_index != note_count:\n",
						"thymio.nf.sound.freq(notes[note_index], durations[note_index])\n",
						"note_index += 1\n",
						"<\n",
						"<\n"
					]
				],
				"statement": [
					"notes = [`$.filter(function (a, i) { return i % 2 == 0; }).map(function (h, i) { return $[2 * i + 1] ? [370, 415, 466, 494, 554][h] : 0; }).join(', ')`]\n",
					"durations = [`$.filter(function (a, i) { return i % 2 == 1; }).map(function (d) { return d ? 10 * d : 28; }).join(', ')`]\n",
					"note_index = 1\n",
					"note_count = 6\n",
					"thymio.nf.sound.freq(notes[0], durations[0])\n"
				]
			}
		},
		{
			"name": "play",
			"python": {
 				"initCodeExec": [
					"thymio.nf.sound.system(-1)\n"
				],
				"statement": "thymio.nf.sound.play(`$[0].toString(10)`)\n"
			}
		},
		{
			"name": "play stop",
			"python": {
 				"initCodeExec": [
					"thymio.nf.sound.system(-1)\n"
				],
				"statement": "thymio.nf.sound.play(-1)\n"
			}
		},
		{
			"name": "set state",
			"python": {
				"initCodeExec": [
					"state = [False, False, False, False])\n"
				],
				"statement": [
					"`$.map(function (v, i) { return v ? 'state[' + i + '] = ' + (v > 0 ? 'True' : 'False') + '\\n' : ''; }).join('')`",
					"`$[0] || $[1] || $[2] || $[3] ? 'leds.circle = [0,state[1]?1:0,0,state[3]?1:0,0,state[2]?1:0,0,state[0]?1:0]\\n' : ''`"
				]
			}
		},
		{
			"name": "toggle state",
			"python": {
				"initCodeExec": [
					"state = [False, False, False, False])\n"
				],
				"statement": [
					"`$.map(function (v, i) { return v ? 'state[' + i + '] = !state[' + i + ']\\n' : ''; }).join('')`",
					"`$[0] || $[1] || $[2] || $[3] ? 'leds.circle = [0,state[1]?1:0,0,state[3]?1:0,0,state[2]?1:0,0,state[0]?1:0]\\n' : ''`"
				]
			}
		},
		{
			"name": "set state 8",
			"python": {
				"initCodeExec": [
					"state8 = 0\n"
				],
				"statement": [
					"state8 = `$[0].toString(10)`\n",
					"thymio.leds.circle = [`[0,1,2,3,4,5,6,7].map(function (i) { return $[0] === i; }).join(', ')`]\n"
				],
				"statementWithoutInit":
					"thymio.leds.circle = [`[0,1,2,3,4,5,6,7].map(function (i) { return $[0] === i; }).join(', ')`]\n"
			}
		},
		{
			"name": "change state 8",
			"python": {
				"initCodeExec": [
					"state8 = 0\n"
				],
				"statement": [
					"state8 = (state8 + `$[0] > 0 ? 1 : 7`) % 8",
					"thymio.leds.circle = [`[0,1,2,3,4,5,6,7].map(function (i) { return 'state8 === ' + i.toString(10); }).join(', ')`]\n"
				],
				"statementWithoutInit":
					"thymio.leds.circle = [`$[0] === 0 ? 1 : 0`,`$[0] === 1 ? 1 : 0`,`$[0] === 2 ? 1 : 0`,`$[0] === 3 ? 1 : 0`,`$[0] === 4 ? 1 : 0`,`$[0] === 5 ? 1 : 0`,`$[0] === 6 ? 1 : 0`,`$[0] === 7 ? 1 : 0`]\n"
			}
		},
		{
			"name": "set counter",
			"python": {
				"initCodeExec": [
					"counter = 0\n"
				],
				"statement": [
					"counter = `$[0] === 0 ? 0 : $[0] > 0 ? 'Math.min(this.getClientState(\"counter\") + 1, 255)' : 'Math.max(this.getClientState(\"counter\") - 1, 0)'`\n",
					"thymio.leds.circle = [counter&1?1:0,counter&2?1:0,counter&4?1:0,counter&8?1:0,counter&16?1:0,counter&32?1:0,counter&64?1:0,counter&128?1:0]\n"
				]
			}
		},
		{
			"name": "set timer",
			"python": {
				"initCodeExec": [
					[
						"# stop timer 0\n",
						"thymio.timer.period[0] = 0\n"
					],
					"timerElapsed = False\n"
				],
				"statement": [
					"thymio.timer.period[0] = `Math.round(1000 * $[0] / slowdown)`\n",
					"timerElapsed = False\n"
				]
			}
		},
		{
			"name": "set timer log",
			"python": {
				"initCodeExec": [
					[
						"# stop timer 0\n",
						"thymio.timer.period[0] = 0\n"
					],
					"timerElapsed = False\n"
				],
				"statement": [
					"thymio.timer.period[0] = `Math.round(1000 * $[0] / slowdown)`\n",
					"thymio.timerElapsed = False\n"
				]
			}
		},
		{
			"name": "picture comment",
			"python": {}
		}
	]
}
